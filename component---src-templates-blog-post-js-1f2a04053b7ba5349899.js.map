{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/templates/blogPost.js"],"names":["loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","data","query","render","finalData","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json","Template","pageContext","next","prev","markdownRemark","title","frontmatter","html","style","fontFamily","className","dangerouslySetInnerHTML","__html","marginBottom","to","path"],"mappings":"2FAAA,wIAcyBA,QAAOC,QAdhC,IAgBMC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAAT,GAA4E,IAAzCC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACzDC,EAAYH,EACdA,EAAKA,KACLD,EAAgBE,IAAUF,EAAgBE,GAAOD,KAErD,OACE,kBAAC,IAAMI,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAa,uDAKrB,IAAME,EAAc,SAAAC,GAAU,IACpBN,EAAkCM,EAAlCN,KAAMC,EAA4BK,EAA5BL,MAAOC,EAAqBI,EAArBJ,OAAQK,EAAaD,EAAbC,SAE7B,OACE,kBAACZ,EAAmBa,SAApB,MACG,SAAAT,GAAe,OACd,kBAACD,EAAD,CACEE,KAAMA,EACNC,MAAOA,EACPC,OAAQA,GAAUK,EAClBR,gBAAiBA,S,qBCzC3B,IAAsBU,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGEpB,IAAMqB,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,kCCPX,kFAqCalB,EAAK,aAWHmB,UA7CE,SAAC,GAAyB,IAAxBpB,EAAuB,EAAvBA,KAAMqB,EAAiB,EAAjBA,YAChBC,EAAcD,EAAdC,KAAMC,EAAQF,EAARE,KAENC,EAAkBxB,EAAlBwB,eACDC,EAAQD,EAAeE,YAAYD,MACnCE,EAAOH,EAAeG,KAC5B,OACE,6BACE,wBAAIC,MAAO,CAACC,WAAY,WAAYJ,GACpC,yBAAKK,UAAU,WACbC,wBAAyB,CAACC,OAAQL,GAClCC,MAAO,CACLC,WAAY,YAIhB,yBAAKD,MAAO,CAACK,aAAc,OAAQJ,WAAY,WAC5CP,GACC,kBAAC,IAAD,CAAMY,GAAIZ,EAAKI,YAAYS,MAA3B,SAKJ,yBAAKP,MAAO,CAACC,WAAY,WACtBN,GACC,kBAAC,IAAD,CAAMW,GAAIX,EAAKG,YAAYS,MAA3B","file":"component---src-templates-blog-post-js-1f2a04053b7ba5349899.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nconst Template = ({data, pageContext}) => {\n  const {next, prev} = pageContext\n\n  const {markdownRemark} = data\n  const title = markdownRemark.frontmatter.title\n  const html = markdownRemark.html\n  return (\n    <div>\n      <h1 style={{fontFamily: 'avenir'}}>{title}</h1>\n      <div className='blogpost'\n        dangerouslySetInnerHTML={{__html: html}}\n        style={{\n          fontFamily: 'avenir'\n        }}\n      />\n\n      <div style={{marginBottom: '1rem', fontFamily: 'avenir'}}>\n        {next && \n          <Link to={next.frontmatter.path}>\n            Next\n          </Link>\n        }\n      </div>\n      <div style={{fontFamily: 'avenir'}}>\n        {prev && \n          <Link to={prev.frontmatter.path}>\n            Previous\n          </Link>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: {eq: $pathSlug} }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nexport default Template\n"],"sourceRoot":""}